syntax = "proto3";
package com.wavesplatform.api.grpc;

import "recipient.proto";
import "transaction.proto";
import "google/protobuf/empty.proto";

service TransactionsApi {
    rpc GetTransactions (TransactionsRequest) returns (stream TransactionResponse);
    rpc GetStateChanges (TransactionsRequest) returns (stream com.wavesplatform.protobuf.transaction.InvokeScriptResult);
    rpc GetStatuses (TransactionsByIdRequest) returns (stream TransactionStatus);
    rpc GetUnconfirmed (TransactionsRequest) returns (stream TransactionResponse);

    rpc Sign (SignRequest) returns (com.wavesplatform.protobuf.transaction.SignedTransaction);
    rpc Broadcast (com.wavesplatform.protobuf.transaction.SignedTransaction) returns (com.wavesplatform.protobuf.transaction.SignedTransaction);
}

message TransactionStatus {
    enum Status {
        NOT_EXISTS = 0;
        UNCONFIRMED = 1;
        CONFIRMED = 2;
    }

    bytes id = 1;
    Status status = 2;
    int64 height = 3;
}

message TransactionResponse {
    bytes id = 1;
    int64 height = 2;
    com.wavesplatform.protobuf.transaction.SignedTransaction transaction = 3;
}

message TransactionsRequest {
    bytes sender = 1;
    com.wavesplatform.protobuf.transaction.Recipient recipient = 2;
    repeated bytes transaction_ids = 3;
}

message TransactionsByIdRequest {
    repeated bytes transaction_ids = 3;
}

message CalculateFeeResponse {
    bytes asset_id = 1;
    uint64 amount = 2;
}

message SignRequest {
    com.wavesplatform.protobuf.transaction.Transaction transaction = 1;
    bytes signer_public_key = 2;
}
